/*
========================================================================================================================
**【文件描述】                                        【文件描述】                                        【文件描述】**
========================================================================================================================
**    文件名称: Memory.h                                                                                                         
**
**    功能描述:	存储器驱动。
**
**    公    司：蒙发利电子
**
**    项目名称：
**
**    平台信息：
**
**    作    者：Hzy
**
**    其他说明:	由于EEPROM的特性，每次写操作都要至少等待5ms的写周期完成，
**              才能进行下一次写操作，且每次最多只能写入一页的数据。
**              因此上层应用应该调用 EEPROM_Write()函数来执行写操作。
**              EEPROM_Write()函数会缓存要写的数据。
**              实际的写操作通过周期性（至少10ms）调用EEPROM_WriteHandle()函数来完成。
**              EPROM_WriteHandle()函数将根据实际情况分次、分页将数据写入EEProm。
**
**    修改记录:  --------------------------------------------------------------
**
========================================================================================================================
========================================================================================================================
*/
#ifndef  _MEMORY_H
#define  _MEMORY_H

/*
========================================================================================================================
* 【文件包含】                                         【文件包含】                                          【文件包含】
========================================================================================================================
*/
#include "bsp.h"


/*
========================================================================================================================
*【全局宏定义】                                       【全局宏定义】                                       【全局宏定义】
========================================================================================================================
*/
#define  EEPROM_MEM_SIZE            256                                   /*存储容量大小，字节单位*/
#define  EEPROM_ADDR_READ           0xA1                                  /*读地址*/
#define  EEPROM_ADDR_WRITE          0xA0                                  /*写地址*/  
#define  EEPROM_PAGE_SIZE_BITS      4                                     /*页大小使用的位数*/ 
#define  EEPROM_PAGE_SIZE           16                                    /*页大小*/ 
#define  EEPROM_PAGE_NUM            (EEPROM_MEM_SIZE/EEPROM_PAGE_SIZE)    /*页数量*/


#define  MEMORY_WRITE_IDLE          0    /*写空闲*/
#define  MEMORY_WRITE_BUSY          1    /*写忙*/ 
#define  MEMORY_WRITE_RUN           2    /*写执行*/ 
#define  MEMORY_WRITE_OP_ERR        3    /*写 操作错误*/ 


/*
========================================================================================================================
*【全局数据类型定义】                              【全局数据类型定义】                              【全局数据类型定义】
========================================================================================================================
*/
/*
************************************************************************************************************************
* 类型定义 :  存储器 写操作                                                                                    
************************************************************************************************************************
*/
typedef struct
{
  uint8_t           *pData;   /*要写的数据*/
  uint16_t          Addr;     /*写地址*/ 
  uint16_t          Len;      /*写长度*/

}MemoryWrite_t;


/*
========================================================================================================================
*【对外声明】                                          【对外声明】                                          【对外声明】
========================================================================================================================
*/
uint8_t EEPROM_Read(uint16_t Addr, uint8_t *pReadData, uint16_t ReadLen);
uint8_t EEPROM_Write(uint16_t Addr, uint8_t *pData, uint16_t DataLen);
void EEPROM_WriteHandle(Ticker_t ExePeriod);



#endif

