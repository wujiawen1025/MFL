/*
========================================================================================================================
**【文件描述】                                        【文件描述】                                        【文件描述】**
========================================================================================================================
**    文件名称: bsp_uart.h 
**
**    功能描述:
**
**    公    司：                                                                                                        
**
**    项目名称：                                                                                                        
**
**    平台信息：                                                                                                        
**
**    作    者：LZH                                                                                                     
**
**    其他说明:                                                                                                        
**
**    修改记录:  
**
========================================================================================================================
========================================================================================================================
*/
#ifndef  _BSP_UART_H_
#define  _BSP_UART_H_


/*
========================================================================================================================
* 【文件包含】                                         【文件包含】                                          【文件包含】
========================================================================================================================
*/
#include "bsp.h"


/*
========================================================================================================================
*【全局宏定义】                                       【全局宏定义】                                       【全局宏定义】
========================================================================================================================
*/
#define  BSP_UART_RX_FIFO_BUF_LEN           2          /*串口接收缓存大小*/

#define  BSP_UART_WORK_MODE_RX              (1<<0)     /*串口工作模式：收*/
#define  BSP_UART_WORK_MODE_TX              (1<<1)     /*串口工作模式：发*/

/*
========================================================================================================================
*【全局数据类型定义】                              【全局数据类型定义】                              【全局数据类型定义】
========================================================================================================================
*/
/*
************************************************************************************************************************
* 类型定义 :  uart串口收发                                                                                                        
************************************************************************************************************************
*/
typedef struct
{
  volatile  uint8_t    WorkMode;

  /*发送相关--------------------------------------------------*/
  uint8_t              *TxPoint;                             /* 指向要发送的字节 */
  uint16_t             TxLen;                                /* 要发送的长度 */

  /*使用FIFO循环队列进行接收处理------------------------------*/
  uint8_t              RxFIFOBuf[BSP_UART_RX_FIFO_BUF_LEN];  /*接收缓存*/
  uint16_t             RxFIFOLen;                            /*接收长度*/
  uint16_t             RxFIFOIn;                             /*进位置*/
  uint16_t             RxFIFOOut;                            /*出位置*/

  /*使用回调函数进行接收处理----------------------------------*/
  void  (*pRxByteCB)(uint8_t RxByte);                        /*字节接收回调函数*/

}UartRxTx_t;

/*
************************************************************************************************************************
* 类型定义 :  UART端口号                                                                                                  
************************************************************************************************************************
*/
typedef enum
{
  BSP_UART_Port0,                /*对应 UART0*/
  BSP_UART_Port1,                /*对应 UART1*/ 
  BSP_UART_Port2,                /*对应 UART2*/ 
  BSP_UART_Port3,                /*对应 UART3*/
  BSP_UART_Port4,                /*对应 UART4*/ 
  
  BSP_UART_PORT_MAX

}BSP_UART_PortNum_t;

/*
************************************************************************************************************************
* 类型定义 :  UART发送状态                                                                                                     
************************************************************************************************************************
*/
typedef enum
{
  BSP_UART_TxState_Idle,         /*发送空闲 */  
  BSP_UART_TxState_Busy          /*发送忙 */   
}BSP_UART_TxState_t;

#define IS_BSP_UART_TX_STATE(STATE) ((BSP_UART_TxState_Idle == (STATE)) || (BSP_UART_TxState_Busy == (STATE)))


/*
========================================================================================================================
*【对外声明】                                          【对外声明】                                          【对外声明】
========================================================================================================================
*/
void BSP_UART_DeInit(void);
void BSP_UART_Init(void);
void BSP_UART_RegRxByteCB(BSP_UART_PortNum_t PortNum, void  (*pRxByteCB)(uint8_t RxByte));
uint16_t BSP_UART_GetRxLen(BSP_UART_PortNum_t PortNum);
uint16_t BSP_UART_GetRxData(BSP_UART_PortNum_t PortNum, uint8_t *pGetBuf, uint16_t GetLen);
BSP_UART_TxState_t BSP_UART_TxData(BSP_UART_PortNum_t PortNum, uint8_t *pTxBuf, uint16_t TxLen);
BSP_UART_TxState_t BSP_UART_GetTxState(BSP_UART_PortNum_t PortNum);


#endif                        /* End of module include.  */
